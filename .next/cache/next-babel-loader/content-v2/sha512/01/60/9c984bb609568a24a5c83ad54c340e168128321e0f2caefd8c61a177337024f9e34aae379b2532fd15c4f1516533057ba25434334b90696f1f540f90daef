{"ast":null,"code":"import firebase from 'firebase'; // export const firebaseConfig = {\n//     apiKey: \"AIzaSyARob1Ja2jTzCVLT9QF6eBOakuXWCVL1e8\",\n//     authDomain: \"hotel-3c249.firebaseapp.com\",\n//     projectId: \"hotel-3c249\",\n//     storageBucket: \"hotel-3c249.appspot.com\",\n//     messagingSenderId: \"745011087359\",\n//     appId: \"1:745011087359:web:714fff5e51447cc5c489ca\",\n//     measurementId: \"G-5XYXP89Z22\"\n// };\n\nexport const firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n}; // Configure FirebaseUI.\n// export const uiConfig = {\n//     // Popup signin flow rather than redirect flow.\n//     // signInFlow: 'popup',\n//     // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n//     signInSuccessUrl: '/rooms',\n//     // We will display Google and Facebook as auth providers.\n//     signInOptions: [\n//         firebase.auth.EmailAuthProvider.PROVIDER_ID,\n//     ]\n// };\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig); // if (location.hostname === \"localhost\")\n  //     firebase.firestore().useEmulator(\"localhost\", 8080);\n}\n\nconst fireApp = firebase;\nexport default fireApp;","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel-guest/firebase_config.js"],"names":["firebase","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","apps","length","initializeApp","fireApp"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADM;AAE1BC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFE;AAG1BC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,oBAHG;AAI1BC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,wBAJD;AAK1BC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,6BALL;AAM1BC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW,gBANO;AAO1BC,EAAAA,aAAa,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPD,CAAvB,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAI,CAACjB,QAAQ,CAACkB,IAAT,CAAcC,MAAnB,EAA2B;AACvBnB,EAAAA,QAAQ,CAACoB,aAAT,CAAuBnB,cAAvB,EADuB,CAEvB;AACA;AACH;;AACD,MAAMoB,OAAO,GAAGrB,QAAhB;AACA,eAAeqB,OAAf","sourcesContent":["import firebase from 'firebase';\r\n\r\n// export const firebaseConfig = {\r\n//     apiKey: \"AIzaSyARob1Ja2jTzCVLT9QF6eBOakuXWCVL1e8\",\r\n//     authDomain: \"hotel-3c249.firebaseapp.com\",\r\n//     projectId: \"hotel-3c249\",\r\n//     storageBucket: \"hotel-3c249.appspot.com\",\r\n//     messagingSenderId: \"745011087359\",\r\n//     appId: \"1:745011087359:web:714fff5e51447cc5c489ca\",\r\n//     measurementId: \"G-5XYXP89Z22\"\r\n// };\r\nexport const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n// Configure FirebaseUI.\r\n// export const uiConfig = {\r\n//     // Popup signin flow rather than redirect flow.\r\n//     // signInFlow: 'popup',\r\n//     // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n//     signInSuccessUrl: '/rooms',\r\n//     // We will display Google and Facebook as auth providers.\r\n//     signInOptions: [\r\n//         firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n//     ]\r\n// };\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    // if (location.hostname === \"localhost\")\r\n    //     firebase.firestore().useEmulator(\"localhost\", 8080);\r\n}\r\nconst fireApp = firebase;\r\nexport default fireApp;"]},"metadata":{},"sourceType":"module"}