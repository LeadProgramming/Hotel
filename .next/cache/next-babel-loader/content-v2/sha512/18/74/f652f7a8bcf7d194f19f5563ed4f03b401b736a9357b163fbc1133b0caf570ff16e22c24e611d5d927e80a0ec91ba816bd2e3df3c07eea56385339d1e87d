{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel-guest\\\\pages\\\\rooms.js\";\nimport Header from \"../components/header\";\nimport fireApp from \"../firebase_config\";\nimport { useSelector } from \"react-redux\";\nimport Combobox from \"../components/combobox\";\n\nconst Rooms = ({\n  listings\n}) => {\n  const rsrvInfo = useSelector(state => state.reservation);\n  listings.forEach((i, j) => {\n    i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate;\n  });\n\n  const reserve = ({\n    dailyRate,\n    totalCharge,\n    roomNumber,\n    roomStatus,\n    roomType\n  }) => {\n    fireApp.firestore().collection('reservation').add({\n      firstName: rsrvInfo.firstName,\n      lastName: rsrvInfo.lastName,\n      reservedDate: Date.now(),\n      checkInDate: rsrvInfo.checkInDate,\n      checkOutDate: rsrvInfo.checkOutDate,\n      roomType: roomType,\n      roomStatus: roomStatus,\n      roomNumber: roomNumber,\n      dailyRate: dailyRate,\n      totalCharge: totalCharge\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), listings === null || listings === void 0 ? void 0 : listings.map((i, j) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Room #: \", i.roomNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Type: \", i.roomType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Combobox, {\n                options: [\"available\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this), i.dailyRate && rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Daily Rate: \", i.dailyRate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Total Charge: \", i.totalCharge]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: reserve.call(null, i, totalCharge[j]),\n                  children: \"Reserve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)\n          }, JSON.stringify(i), false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  let listings = [];\n\n  if (query.type) {\n    await fireApp.firestore().collection(\"room\").where(\"roomType\", \"==\", query.type).where(\"roomStatus\", \"==\", \"available\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  } else {\n    await fireApp.firestore().collection(\"room\").orderBy(\"roomNumber\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  }\n\n  return {\n    props: {\n      listings\n    }\n  };\n}\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel-guest/pages/rooms.js"],"names":["Header","fireApp","useSelector","Combobox","Rooms","listings","rsrvInfo","state","reservation","forEach","i","j","days","dailyRate","reserve","totalCharge","roomNumber","roomStatus","roomType","firestore","collection","add","firstName","lastName","reservedDate","Date","now","checkInDate","checkOutDate","map","call","JSON","stringify","getServerSideProps","query","type","where","get","then","queryData","push","data","orderBy","props"],"mappings":"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","sourcesContent":["import Header from \"../components/header\"\r\nimport fireApp from \"../firebase_config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Combobox from \"../components/combobox\";\r\nconst Rooms = ({ listings }) => {\r\n    const rsrvInfo = useSelector(state => state.reservation);\r\n    listings.forEach((i, j) => { i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate });\r\n    const reserve = ({ dailyRate, totalCharge, roomNumber, roomStatus, roomType }) => {\r\n        fireApp.firestore().collection('reservation').add({\r\n            firstName: rsrvInfo.firstName,\r\n            lastName: rsrvInfo.lastName,\r\n            reservedDate: Date.now(),\r\n            checkInDate: rsrvInfo.checkInDate,\r\n            checkOutDate: rsrvInfo.checkOutDate,\r\n            roomType: roomType,\r\n            roomStatus: roomStatus,\r\n            roomNumber: roomNumber,\r\n            dailyRate: dailyRate,\r\n            totalCharge: totalCharge\r\n        });\r\n    }\r\n    return (\r\n        <div >\r\n            <Header>\r\n                <main>\r\n                    <h1>\r\n                        Rooms\r\n                    </h1>\r\n                    {listings?.map((i, j) => {\r\n                        return (\r\n                            <div key={JSON.stringify(i)}>\r\n                                <div>\r\n                                    <span>\r\n                                        Room #: {i.roomNumber}\r\n                                    </span>\r\n                                    <span>\r\n                                        Type: {i.roomType}\r\n                                    </span>\r\n                                    <Combobox options={[\"available\"]} />\r\n\r\n                                    {\r\n                                        i.dailyRate && rsrvInfo.firstName &&\r\n                                        <>\r\n                                            <span>\r\n                                                Daily Rate: {i.dailyRate}\r\n                                            </span>\r\n                                            <span>\r\n                                                Total Charge: {i.totalCharge}\r\n                                            </span>\r\n                                            <button onClick={reserve.call(null, i, totalCharge[j])}>Reserve</button>\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </main>\r\n            </Header>\r\n        </div >\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let listings = [];\r\n    if (query.type) {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .where(\"roomType\", \"==\", query.type)\r\n            .where(\"roomStatus\", \"==\", \"available\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    else {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .orderBy(\"roomNumber\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    return {\r\n        props: { listings },\r\n    }\r\n}\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}