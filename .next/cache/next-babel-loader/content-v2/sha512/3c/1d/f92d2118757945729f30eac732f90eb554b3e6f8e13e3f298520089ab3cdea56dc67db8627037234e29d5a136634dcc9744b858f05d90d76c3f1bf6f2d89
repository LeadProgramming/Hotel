{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel\\\\pages\\\\housekeeping.js\",\n    _this = this;\n\nimport Header from \"../components/header\";\n\nvar Housekeeping = function Housekeeping(_ref) {\n  var dirty = _ref.dirty;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Housekeeping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, _this), dirty.length > 0 ? dirty.map(function (i, j) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Housekeeper: \", i.housekeeper]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Room #: \", i.roomNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Type: \", i.roomType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Status: \", i.roomStatus]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Bathroom Towels: \", i.towels]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Bed Sheets: \", i.bedSheets ? \"Cleaned\" : \"Dirty\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Vacuum: \", i.vacuum ? \"Cleaned\" : \"Dirty\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Dusting: \", i.dusting ? \"Cleaned\" : \"Dirty\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Electronics: \", i.electronics.map(function (j) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: j\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 49\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 37\n            }, _this)\n          }, JSON.stringify(i), false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 33\n          }, _this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 30\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Housekeeping;\nexport var __N_SSP = true;\nexport default Housekeeping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Housekeeping\");","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/pages/housekeeping.js"],"names":["Header","Housekeeping","dirty","length","map","i","j","housekeeper","roomNumber","roomType","roomStatus","towels","bedSheets","vacuum","dusting","electronics","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAEhC,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAIKA,KAAK,CAACC,MAAN,GAAe,CAAf,GACGD,KAAK,CAACE,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChB,8BACI;AAAA,mCACI;AAAA,sCACI;AAAA,4CACkBD,CAAC,CAACE,WADpB;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAII;AAAA,uCACaF,CAAC,CAACG,UADf;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,eAOI;AAAA,qCACWH,CAAC,CAACI,QADb;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,eAUI;AAAA,uCACaJ,CAAC,CAACK,UADf;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVJ,eAaI;AAAA,gDACsBL,CAAC,CAACM,MADxB;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbJ,eAgBI;AAAA,2CACiBN,CAAC,CAACO,SAAF,GAAc,SAAd,GAA0B,OAD3C;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhBJ,eAmBI;AAAA,uCACaP,CAAC,CAACQ,MAAF,GAAW,SAAX,GAAuB,OADpC;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnBJ,eAsBI;AAAA,wCACcR,CAAC,CAACS,OAAF,GAAY,SAAZ,GAAwB,OADtC;AAAA;AAAA;AAAA;AAAA;AAAA,uBAtBJ,eAyBI;AAAA,4CACkBT,CAAC,CAACU,WAAF,CAAcX,GAAd,CAAkB,UAAAE,CAAC,EAAI;AACrC,sCACI;AAAA,8BACKA;AADL;AAAA;AAAA;AAAA;AAAA,2BADJ;AAKH,iBANiB,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA,uBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUU,IAAI,CAACC,SAAL,CAAeZ,CAAf,CAAV;AAAA;AAAA;AAAA;AAAA,mBADJ;AAuCH,SAxCD,CADH,gBAyCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA7Cb;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAkDI;AAAA;AAAA;AAAA;AAAA,eAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAiEH,CAnED;;KAAMJ,Y;;AAoFN,eAAeA,YAAf","sourcesContent":["import Header from \"../components/header\"\r\nimport fireApp from \"../firebase_config\";\r\n\r\nconst Housekeeping = ({ dirty }) => {\r\n\r\n    return (\r\n        <div >\r\n            <Header>\r\n                <main>\r\n                    <h1>\r\n                        Housekeeping\r\n                    </h1>\r\n                    {dirty.length > 0 ?\r\n                        dirty.map((i, j) => {\r\n                            return (\r\n                                <div key={JSON.stringify(i)}>\r\n                                    <div>\r\n                                        <span>\r\n                                            Housekeeper: {i.housekeeper}\r\n                                        </span>\r\n                                        <span>\r\n                                            Room #: {i.roomNumber}\r\n                                        </span>\r\n                                        <span>\r\n                                            Type: {i.roomType}\r\n                                        </span>\r\n                                        <span>\r\n                                            Status: {i.roomStatus}\r\n                                        </span>\r\n                                        <span>\r\n                                            Bathroom Towels: {i.towels}\r\n                                        </span>\r\n                                        <span>\r\n                                            Bed Sheets: {i.bedSheets ? \"Cleaned\" : \"Dirty\"}\r\n                                        </span>\r\n                                        <span>\r\n                                            Vacuum: {i.vacuum ? \"Cleaned\" : \"Dirty\"}\r\n                                        </span>\r\n                                        <span>\r\n                                            Dusting: {i.dusting ? \"Cleaned\" : \"Dirty\"}\r\n                                        </span>\r\n                                        <span>\r\n                                            Electronics: {i.electronics.map(j => {\r\n                                            return (\r\n                                                <div>\r\n                                                    {j}\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }) : <p>No rooms</p>}\r\n\r\n                </main>\r\n\r\n                <footer>\r\n                    {/* <a\r\n          href=\"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Powered by{' '}\r\n          <img src=\"/vercel.svg\" alt=\"Vercel Logo\" className={styles.logo} />\r\n        </a> */}\r\n                </footer>\r\n            </Header>\r\n        </div >\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let dirty = [];\r\n    await fireApp.firestore()\r\n        .collection(\"room\")\r\n        .where(\"roomStatus\", \"==\", \"dirty\")\r\n        .get()\r\n        .then(queryData => {\r\n            queryData.forEach(i => {\r\n                dirty.push(i.data());\r\n            })\r\n        })\r\n    return {\r\n        props: { dirty }\r\n    }\r\n\r\n}\r\nexport default Housekeeping;\r\n"]},"metadata":{},"sourceType":"module"}