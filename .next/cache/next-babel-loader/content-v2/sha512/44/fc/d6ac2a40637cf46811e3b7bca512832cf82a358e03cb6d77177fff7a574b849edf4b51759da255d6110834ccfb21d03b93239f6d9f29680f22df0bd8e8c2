{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel\\\\pages\\\\rooms.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Header from \"../components/header\";\nimport fireApp from \"../firebase_config\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\n\nvar Rooms = function Rooms(_ref) {\n  _s();\n\n  var listings = _ref.listings;\n  var rsrvInfo = useSelector(function (state) {\n    return state.reservation;\n  });\n  listings.forEach(function (i) {\n    i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate;\n  });\n\n  var reserving = function reserving(_ref2) {\n    var dailyRate = _ref2.dailyRate,\n        totalCharge = _ref2.totalCharge,\n        roomNumber = _ref2.roomNumber,\n        roomStatus = _ref2.roomStatus,\n        roomType = _ref2.roomType;\n    fireApp.firestore().collection('reservation').add({\n      firstName: rsrvInfo.firstName,\n      lastName: rsrvInfo.lastName,\n      reservedDate: Date.now(),\n      checkInDate: rsrvInfo.checkInDate,\n      checkOutDate: rsrvInfo.checkOutDate,\n      roomType: roomType,\n      roomStatus: roomStatus,\n      roomNumber: roomNumber,\n      dailyRate: dailyRate,\n      totalCharge: totalCharge\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, _this), listings === null || listings === void 0 ? void 0 : listings.map(function (i, j) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Room #: \", i.roomNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Type: \", i.roomType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, _this), !rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(\"select\", {\n                role: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i.roomStatus,\n                  children: i.roomStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 45\n                }, _this), [\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(function (i) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: i,\n                    children: i\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 53\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 41\n              }, _this), i.dailyRate && rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Daily Rate: \", i.dailyRate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 45\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Total Charge: \", i.totalCharge]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 45\n                }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: function onClick() {\n                    reserving(i);\n                  },\n                  children: \"Reserve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 45\n                }, _this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, _this)\n          }, JSON.stringify(i), false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Rooms, \"fTw1cEGfOuh7M4meOO3uVJ0+tNc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Rooms;\nexport var __N_SSP = true;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/pages/rooms.js"],"names":["Header","fireApp","useSelector","useRouter","useEffect","useState","Rooms","listings","rsrvInfo","state","reservation","forEach","i","days","dailyRate","reserving","totalCharge","roomNumber","roomStatus","roomType","firestore","collection","add","firstName","lastName","reservedDate","Date","now","checkInDate","checkOutDate","map","j","JSON","stringify"],"mappings":"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","sourcesContent":["import Header from \"../components/header\"\r\nimport fireApp from \"../firebase_config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nconst Rooms = ({ listings }) => {\r\n    const rsrvInfo = useSelector(state => state.reservation);\r\n    listings.forEach((i) => { i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate });\r\n    const reserving = ({ dailyRate, totalCharge, roomNumber, roomStatus, roomType }) => {\r\n        fireApp.firestore().collection('reservation').add({\r\n            firstName: rsrvInfo.firstName,\r\n            lastName: rsrvInfo.lastName,\r\n            reservedDate: Date.now(),\r\n            checkInDate: rsrvInfo.checkInDate,\r\n            checkOutDate: rsrvInfo.checkOutDate,\r\n            roomType: roomType,\r\n            roomStatus: roomStatus,\r\n            roomNumber: roomNumber,\r\n            dailyRate: dailyRate,\r\n            totalCharge: totalCharge\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Header>\r\n                <main>\r\n                    <h1>\r\n                        Rooms\r\n                    </h1>\r\n                    {listings?.map((i, j) => {\r\n                        return (\r\n                            <div key={JSON.stringify(i)}>\r\n                                <div>\r\n                                    <span>\r\n                                        Room #: {i.roomNumber}\r\n                                    </span>\r\n                                    <span>\r\n                                        Type: {i.roomType}\r\n                                    </span>\r\n                                    {\r\n                                        !rsrvInfo.firstName &&\r\n                                        <select role=\"none\">\r\n                                            <option value={i.roomStatus}>{i.roomStatus}</option>\r\n                                            {[\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(i => {\r\n                                                return (\r\n                                                    <option value={i} >{i}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    }\r\n\r\n                                    {\r\n                                        i.dailyRate && rsrvInfo.firstName &&\r\n                                        <>\r\n                                            <span>\r\n                                                Daily Rate: {i.dailyRate}\r\n                                            </span>\r\n                                            <span>\r\n                                                Total Charge: {i.totalCharge}\r\n                                            </span>\r\n                                            <button onClick={() => {\r\n                                                reserving(i)\r\n                                            }}>Reserve</button>\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </main>\r\n            </Header>\r\n        </div >\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let listings = [];\r\n    if (query.type) {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .where(\"roomType\", \"==\", query.type)\r\n            .where(\"roomStatus\", \"==\", \"available\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    else {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .orderBy(\"roomNumber\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    return {\r\n        props: { listings },\r\n    }\r\n}\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}