{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel-guest\\\\pages\\\\rooms.js\";\nimport Header from \"../components/header\";\nimport fireApp from \"../firebase_config\";\n\nconst Rooms = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getInitialProps(ctx) {\n  const listings = [];\n  const payload = await fireApp.firestore().collection(\"room\").where(\"roomType\", \"==\", ctx.query.type).get().then(queryData => {\n    queryData.forEach(i => {\n      listings.push(i.data());\n    });\n  });\n  return {\n    props: {\n      listings\n    }\n  };\n}\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel-guest/pages/rooms.js"],"names":["Header","fireApp","Rooms","props","console","log","getInitialProps","ctx","listings","payload","firestore","collection","where","query","type","get","then","queryData","forEach","i","push","data"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA/BD;;AAgCA,OAAO,eAAeG,eAAf,CAA+BC,GAA/B,EAAoC;AACvC,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,OAAO,GAAG,MAAMR,OAAO,CACxBS,SADiB,GAEjBC,UAFiB,CAEN,MAFM,EAGjBC,KAHiB,CAGX,UAHW,EAGC,IAHD,EAGOL,GAAG,CAACM,KAAJ,CAAUC,IAHjB,EAIjBC,GAJiB,GAKjBC,IALiB,CAKXC,SAAD,IAAe;AACjBA,IAAAA,SAAS,CAACC,OAAV,CAAmBC,CAAD,IAAO;AACrBX,MAAAA,QAAQ,CAACY,IAAT,CAAcD,CAAC,CAACE,IAAF,EAAd;AACH,KAFD;AAGH,GATiB,CAAtB;AAUA,SAAO;AACHlB,IAAAA,KAAK,EAAE;AACHK,MAAAA;AADG;AADJ,GAAP;AAKH;AAED,eAAeN,KAAf","sourcesContent":["import Header from \"../components/header\";\r\nimport fireApp from \"../firebase_config\";\r\nconst Rooms = (props) => {\r\n    console.log(props)\r\n    return (\r\n        < div >\r\n            <Header>\r\n                <main>\r\n                    <h1>Rooms</h1>\r\n                    {/* {props?.map((i) => (\r\n                        <div key={i}>\r\n                            <div>\r\n                                <span>Room #: {i.roomNumber}</span>\r\n                                <span>Type: {i.roomType}</span>\r\n                                <button>Reserve</button>\r\n                            </div>\r\n                        </div>\r\n                    ))} */}\r\n                </main>\r\n\r\n                <footer>\r\n                    {/* <a\r\n          href=\"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Powered by{' '}\r\n          <img src=\"/vercel.svg\" alt=\"Vercel Logo\" className={styles.logo} />\r\n        </a> */}\r\n                </footer>\r\n            </Header>\r\n        </div >\r\n    );\r\n}\r\nexport async function getInitialProps(ctx) {\r\n    const listings = [];\r\n    const payload = await fireApp\r\n        .firestore()\r\n        .collection(\"room\")\r\n        .where(\"roomType\", \"==\", ctx.query.type)\r\n        .get()\r\n        .then((queryData) => {\r\n            queryData.forEach((i) => {\r\n                listings.push(i.data());\r\n            });\r\n        });\r\n    return {\r\n        props: {\r\n            listings,\r\n        },\r\n    };\r\n}\r\n\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}