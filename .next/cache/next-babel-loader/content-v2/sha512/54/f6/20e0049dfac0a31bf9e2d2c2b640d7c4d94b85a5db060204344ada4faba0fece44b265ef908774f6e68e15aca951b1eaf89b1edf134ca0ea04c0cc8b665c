{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel\\\\pages\\\\rooms.js\";\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport fireApp from \"../firebase_config\";\n\nconst Rooms = ({\n  listings\n}) => {\n  const router = useRouter();\n  const rsrvInfo = useSelector(state => state.reservation);\n  listings.forEach(i => {\n    i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate;\n  });\n\n  const reserving = ({\n    dailyRate,\n    totalCharge,\n    roomNumber,\n    roomType\n  }) => {\n    fireApp.firestore().collection('reservation').add({\n      firstName: rsrvInfo.firstName,\n      lastName: rsrvInfo.lastName,\n      reservedDate: Date.now(),\n      checkInDate: rsrvInfo.checkInDate,\n      checkOutDate: rsrvInfo.checkOutDate,\n      roomType: roomType,\n      roomStatus: \"occupied\",\n      roomNumber: roomNumber,\n      dailyRate: dailyRate,\n      totalCharge: totalCharge\n    });\n    fireApp.firestore().collection('room').docs(roomNumber).update({\n      roomStatus: \"occupied\",\n      checkInDate: rsrvInfo.checkInDate,\n      checkOutDate: rsrvInfo.checkOutDate\n    });\n    router.push(\"/rooms\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pt-8\",\n      children: \"Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Daily Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Charge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: (listings === null || listings === void 0 ? void 0 : listings.length) > 0 ? listings.map((i, j) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i.roomNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: i.roomType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), !rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(\"select\", {\n              role: \"none\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: i.roomStatus,\n                children: i.roomStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this), [\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(i => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i,\n                  children: i\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), i.dailyRate && rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: i.dailyRate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: i.totalCharge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  reserving(i);\n                },\n                children: \"Reserve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)]\n          }, JSON.stringify(i), true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        }) : \"No rooms available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  let listings = [];\n\n  if (query.type) {\n    await fireApp.firestore().collection(\"room\").where(\"roomType\", \"==\", query.type).where(\"roomStatus\", \"==\", \"available\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  } else {\n    await fireApp.firestore().collection(\"room\").orderBy(\"roomNumber\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  }\n\n  return {\n    props: {\n      listings\n    }\n  };\n}\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/pages/rooms.js"],"names":["useRouter","useSelector","fireApp","Rooms","listings","router","rsrvInfo","state","reservation","forEach","i","days","dailyRate","reserving","totalCharge","roomNumber","roomType","firestore","collection","add","firstName","lastName","reservedDate","Date","now","checkInDate","checkOutDate","roomStatus","docs","update","push","length","map","j","JSON","stringify","getServerSideProps","query","type","where","get","then","queryData","data","orderBy","props"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport fireApp from \"../firebase_config\";\r\nconst Rooms = ({ listings }) => {\r\n    const router = useRouter();\r\n    const rsrvInfo = useSelector(state => state.reservation);\r\n    listings.forEach((i) => { i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate });\r\n\r\n    const reserving = ({ dailyRate, totalCharge, roomNumber, roomType }) => {\r\n        fireApp.firestore().collection('reservation').add({\r\n            firstName: rsrvInfo.firstName,\r\n            lastName: rsrvInfo.lastName,\r\n            reservedDate: Date.now(),\r\n            checkInDate: rsrvInfo.checkInDate,\r\n            checkOutDate: rsrvInfo.checkOutDate,\r\n            roomType: roomType,\r\n            roomStatus: \"occupied\",\r\n            roomNumber: roomNumber,\r\n            dailyRate: dailyRate,\r\n            totalCharge: totalCharge\r\n        });\r\n        fireApp.firestore().collection('room').docs(roomNumber).update({\r\n            roomStatus: \"occupied\",\r\n            checkInDate: rsrvInfo.checkInDate,\r\n            checkOutDate: rsrvInfo.checkOutDate\r\n        });\r\n        router.push(\"/rooms\")\r\n    }\r\n\r\n    return (\r\n        <div className={\"space-y-4\"}>\r\n            <h1 className=\"pt-8\">\r\n                Rooms\r\n            </h1>\r\n            <table className={\"table-auto\"}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Room #</th>\r\n                        <th>Room Type</th>\r\n                        <th>Room Status</th>\r\n                        <th>Daily Rate</th>\r\n                        <th>Total Charge</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listings?.length > 0 ? listings.map((i, j) => {\r\n                        return (\r\n                            <tr key={JSON.stringify(i)}>\r\n                                <td>\r\n                                    {i.roomNumber}\r\n                                </td>\r\n                                <td>\r\n                                    {i.roomType}\r\n                                </td>\r\n                                {\r\n                                    !rsrvInfo.firstName &&\r\n                                    <select role=\"none\">\r\n                                        <option value={i.roomStatus}>{i.roomStatus}</option>\r\n                                        {[\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(i => {\r\n                                            return (\r\n                                                <option value={i} >{i}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                }\r\n\r\n                                {\r\n                                    i.dailyRate && rsrvInfo.firstName &&\r\n                                    <>\r\n                                        <td>\r\n                                            {i.dailyRate}\r\n                                        </td>\r\n                                        <td>\r\n                                            {i.totalCharge}\r\n                                        </td>\r\n                                        <button onClick={() => {\r\n                                            reserving(i);\r\n                                        }}>Reserve</button>\r\n                                    </>\r\n                                }\r\n\r\n\r\n                            </tr>\r\n                        )\r\n                    }) : \"No rooms available\"}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let listings = [];\r\n    if (query.type) {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .where(\"roomType\", \"==\", query.type)\r\n            .where(\"roomStatus\", \"==\", \"available\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    else {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .orderBy(\"roomNumber\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    return {\r\n        props: { listings },\r\n    }\r\n}\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}