{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel-guest\\\\pages\\\\rooms.js\";\nimport Header from \"../components/header\";\nimport fireApp from \"../firebase_config\";\n\nconst Rooms = ({\n  listings,\n  days\n}) => {\n  const totalCharge = i.dailyRate * days;\n\n  const reserve = ({\n    dailyRate,\n    roomNumber,\n    roomStatus,\n    roomType\n  }) => {\n    console.log(data); // fireApp.firestore().collection('reservation').add(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), listings === null || listings === void 0 ? void 0 : listings.map((i, j) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Room #: \", i.roomNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [\"Type: \", i.roomType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 37\n              }, this), i.dailyRate && days && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Daily Rate: \", i.dailyRate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Total Charge: \", i.dailyRate * days]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: reserve.call(null, i),\n                  children: \"Reserve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this)\n          }, JSON.stringify(i), false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  let listings = [];\n  let days = [];\n\n  if (query.type) {\n    await fireApp.firestore().collection(\"room\").where(\"roomType\", \"==\", query.type).where(\"roomStatus\", \"==\", \"available\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n    return {\n      props: {\n        listings,\n        days: query.days\n      }\n    };\n  } else {\n    await fireApp.firestore().collection(\"room\").orderBy(\"roomNumber\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n    return {\n      props: {\n        listings\n      }\n    };\n  }\n}\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel-guest/pages/rooms.js"],"names":["Header","fireApp","Rooms","listings","days","totalCharge","i","dailyRate","reserve","roomNumber","roomStatus","roomType","console","log","data","map","j","call","JSON","stringify","getServerSideProps","query","type","firestore","collection","where","get","then","queryData","forEach","push","props","orderBy"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAClC,QAAMC,WAAW,GAAGC,CAAC,CAACC,SAAF,GAAcH,IAAlC;;AACA,QAAMI,OAAO,GAAG,CAAC;AAAED,IAAAA,SAAF;AAAaE,IAAAA,UAAb;AAAyBC,IAAAA,UAAzB;AAAqCC,IAAAA;AAArC,GAAD,KAAqD;AACjEC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EADiE,CAEjE;AACH,GAHD;;AAIA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKX,QAJL,aAIKA,QAJL,uBAIKA,QAAQ,CAAEY,GAAV,CAAc,CAACT,CAAD,EAAIU,CAAJ,KAAU;AACrB,8BACI;AAAA,mCACI;AAAA,sCACI;AAAA,uCACaV,CAAC,CAACG,UADf;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAA,qCACWH,CAAC,CAACK,QADb;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,EAQQL,CAAC,CAACC,SAAF,IAAeH,IAAf,iBACA;AAAA,wCACI;AAAA,6CACiBE,CAAC,CAACC,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAA,+CACmBD,CAAC,CAACC,SAAF,GAAcH,IADjC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAOI;AAAQ,kBAAA,OAAO,EAAEI,OAAO,CAACS,IAAR,CAAa,IAAb,EAAmBX,CAAnB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA,8BATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUY,IAAI,CAACC,SAAL,CAAeb,CAAf,CAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AA0BH,SA3BA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CA9CD;;AA+CA,OAAO,eAAec,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA6C;AAChD,MAAIlB,QAAQ,GAAG,EAAf;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAIiB,KAAK,CAACC,IAAV,EAAgB;AACZ,UAAMrB,OAAO,CAACsB,SAAR,GACDC,UADC,CACU,MADV,EAEDC,KAFC,CAEK,UAFL,EAEiB,IAFjB,EAEuBJ,KAAK,CAACC,IAF7B,EAGDG,KAHC,CAGK,YAHL,EAGmB,IAHnB,EAGyB,WAHzB,EAIDC,GAJC,GAKDC,IALC,CAKIC,SAAS,IAAI;AACfA,MAAAA,SAAS,CAACC,OAAV,CAAkBvB,CAAC,IAAI;AACnBH,QAAAA,QAAQ,CAAC2B,IAAT,CAAcxB,CAAC,CAACQ,IAAF,EAAd;AACH,OAFD;AAGH,KATC,CAAN;AAUA,WAAO;AACHiB,MAAAA,KAAK,EAAE;AAAE5B,QAAAA,QAAF;AAAYC,QAAAA,IAAI,EAAEiB,KAAK,CAACjB;AAAxB;AADJ,KAAP;AAGH,GAdD,MAeK;AACD,UAAMH,OAAO,CAACsB,SAAR,GACDC,UADC,CACU,MADV,EAEDQ,OAFC,CAEO,YAFP,EAGDN,GAHC,GAIDC,IAJC,CAIIC,SAAS,IAAI;AACfA,MAAAA,SAAS,CAACC,OAAV,CAAkBvB,CAAC,IAAI;AACnBH,QAAAA,QAAQ,CAAC2B,IAAT,CAAcxB,CAAC,CAACQ,IAAF,EAAd;AACH,OAFD;AAGH,KARC,CAAN;AASA,WAAO;AACHiB,MAAAA,KAAK,EAAE;AAAE5B,QAAAA;AAAF;AADJ,KAAP;AAGH;AACJ;AACD,eAAeD,KAAf","sourcesContent":["import Header from \"../components/header\"\r\nimport fireApp from \"../firebase_config\";\r\n\r\nconst Rooms = ({ listings, days }) => {\r\n    const totalCharge = i.dailyRate * days\r\n    const reserve = ({ dailyRate, roomNumber, roomStatus, roomType }) => {\r\n        console.log(data);\r\n        // fireApp.firestore().collection('reservation').add(data);\r\n    }\r\n    return (\r\n        <div >\r\n            <Header>\r\n                <main>\r\n                    <h1>\r\n                        Rooms\r\n                    </h1>\r\n                    {listings?.map((i, j) => {\r\n                        return (\r\n                            <div key={JSON.stringify(i)}>\r\n                                <div>\r\n                                    <span>\r\n                                        Room #: {i.roomNumber}\r\n                                    </span>\r\n                                    <button>\r\n                                        Type: {i.roomType}\r\n                                    </button>\r\n                                    {\r\n                                        i.dailyRate && days &&\r\n                                        <>\r\n                                            <span>\r\n                                                Daily Rate: {i.dailyRate}\r\n                                            </span>\r\n                                            <span>\r\n                                                Total Charge: {i.dailyRate * days}\r\n                                            </span>\r\n                                            <button onClick={reserve.call(null, i)}>Reserve</button>\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </main>\r\n            </Header>\r\n        </div >\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let listings = [];\r\n    let days = [];\r\n    if (query.type) {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .where(\"roomType\", \"==\", query.type)\r\n            .where(\"roomStatus\", \"==\", \"available\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n        return {\r\n            props: { listings, days: query.days }\r\n        }\r\n    }\r\n    else {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .orderBy(\"roomNumber\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n        return {\r\n            props: { listings },\r\n        }\r\n    }\r\n}\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}