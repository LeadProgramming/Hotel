{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel-guest\\\\pages\\\\rooms.js\";\nimport Header from \"../components/header\";\nimport fireApp from \"../firebase_config\";\n\nconst Rooms = ({\n  listings,\n  days\n}) => {\n  console.log(days);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), listings === null || listings === void 0 ? void 0 : listings.map((i, j) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Room #: \", i.roomNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [\"Type: \", i.roomType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 37\n              }, this), i.dailyRate && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Daily Rate: \", i.dailyRate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 33\n            }, this)\n          }, JSON.stringify(i), false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  let listings = [];\n  let days = [];\n\n  if (query.type) {\n    await fireApp.firestore().collection(\"room\").where(\"roomType\", \"==\", query.type).where(\"roomStatus\", \"==\", \"available\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n    await fireApp.firestore().collection(\"reservation\").get().then(queryData => {\n      queryData.forEach(i => {\n        days.push(Math.floor(i.data().checkOutDate.seconds - i.data().checkInDate.seconds));\n      });\n    });\n  } else {\n    await fireApp.firestore().collection(\"room\").orderBy(\"roomNumber\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  }\n\n  return {\n    props: {\n      listings,\n      days\n    }\n  };\n}\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel-guest/pages/rooms.js"],"names":["Header","fireApp","Rooms","listings","days","console","log","map","i","j","roomNumber","roomType","dailyRate","JSON","stringify","getServerSideProps","query","type","firestore","collection","where","get","then","queryData","forEach","push","data","Math","floor","checkOutDate","seconds","checkInDate","orderBy","props"],"mappings":"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","sourcesContent":["import Header from \"../components/header\"\r\nimport fireApp from \"../firebase_config\";\r\n\r\nconst Rooms = ({ listings, days }) => {\r\n    console.log(days)\r\n    return (\r\n        <div >\r\n            <Header>\r\n                <main>\r\n                    <h1>\r\n                        Rooms\r\n                    </h1>\r\n                    {listings?.map((i, j) => {\r\n                        return (\r\n                            <div key={JSON.stringify(i)}>\r\n                                <div>\r\n                                    <span>\r\n                                        Room #: {i.roomNumber}\r\n                                    </span>\r\n                                    <button>\r\n                                        Type: {i.roomType}\r\n                                    </button>\r\n                                    {\r\n                                        i.dailyRate &&\r\n                                        <>\r\n                                            <span>\r\n                                                Daily Rate: {i.dailyRate}\r\n                                            </span>\r\n                                            <span>\r\n                                                {/* Total Charge: {i.dailyRate * days[j]} */}\r\n                                            </span>\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </main>\r\n\r\n                <footer>\r\n                    {/* <a\r\n          href=\"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Powered by{' '}\r\n          <img src=\"/vercel.svg\" alt=\"Vercel Logo\" className={styles.logo} />\r\n        </a> */}\r\n                </footer>\r\n            </Header>\r\n        </div >\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let listings = [];\r\n    let days = [];\r\n    if (query.type) {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .where(\"roomType\", \"==\", query.type)\r\n            .where(\"roomStatus\", \"==\", \"available\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n        await fireApp.firestore()\r\n            .collection(\"reservation\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    days.push(Math.floor(i.data().checkOutDate.seconds - i.data().checkInDate.seconds));\r\n                })\r\n            })\r\n    }\r\n    else {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .orderBy(\"roomNumber\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    return {\r\n        props: { listings, days },\r\n    }\r\n}\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}