{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel\\\\pages\\\\rooms.js\";\nimport Header from \"../components/header\";\nimport fireApp from \"../firebase_config\";\nimport { useSelector } from \"react-redux\";\n\nconst Rooms = ({\n  listings\n}) => {\n  const rsrvInfo = useSelector(state => state.reservation);\n  listings.forEach(i => {\n    i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate;\n  });\n\n  const reserve = ({\n    dailyRate,\n    totalCharge,\n    roomNumber,\n    roomStatus,\n    roomType\n  }) => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), listings === null || listings === void 0 ? void 0 : listings.map((i, j) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Room #: \", i.roomNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Type: \", i.roomType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 37\n              }, this), !rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(\"select\", {\n                role: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i.roomStatus,\n                  children: i.roomStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 45\n                }, this), [\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(i => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: i,\n                    children: i\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 53\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 41\n              }, this), i.dailyRate && rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Daily Rate: \", i.dailyRate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Total Charge: \", i.totalCharge]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: async () => {\n                    await fireApp.firestore().collection('reservation').add({\n                      firstName: rsrvInfo.firstName,\n                      lastName: rsrvInfo.lastName,\n                      reservedDate: Date.now(),\n                      checkInDate: rsrvInfo.checkInDate,\n                      checkOutDate: rsrvInfo.checkOutDate,\n                      roomType: i.roomType,\n                      roomStatus: i.roomStatus,\n                      roomNumber: i.roomNumber,\n                      dailyRate: i.dailyRate,\n                      totalCharge: i.totalCharge\n                    });\n                  },\n                  children: \"Reserve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 33\n            }, this)\n          }, JSON.stringify(i), false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  let listings = [];\n\n  if (query.type) {\n    await fireApp.firestore().collection(\"room\").where(\"roomType\", \"==\", query.type).where(\"roomStatus\", \"==\", \"available\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  } else {\n    await fireApp.firestore().collection(\"room\").orderBy(\"roomNumber\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  }\n\n  return {\n    props: {\n      listings\n    }\n  };\n}\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/pages/rooms.js"],"names":["Header","fireApp","useSelector","Rooms","listings","rsrvInfo","state","reservation","forEach","i","days","dailyRate","reserve","totalCharge","roomNumber","roomStatus","roomType","map","j","firstName","firestore","collection","add","lastName","reservedDate","Date","now","checkInDate","checkOutDate","JSON","stringify","getServerSideProps","query","type","where","get","then","queryData","push","data","orderBy","props"],"mappings":"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","sourcesContent":["import Header from \"../components/header\"\r\nimport fireApp from \"../firebase_config\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Rooms = ({ listings }) => {\r\n\r\n    const rsrvInfo = useSelector(state => state.reservation);\r\n    listings.forEach((i) => { i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate });\r\n    const reserve = ({ dailyRate, totalCharge, roomNumber, roomStatus, roomType }) => {\r\n\r\n    }\r\n    return (\r\n        <div >\r\n            <Header>\r\n                <main>\r\n                    <h1>\r\n                        Rooms\r\n                    </h1>\r\n                    {listings?.map((i, j) => {\r\n                        return (\r\n                            <div key={JSON.stringify(i)}>\r\n                                <div>\r\n                                    <span>\r\n                                        Room #: {i.roomNumber}\r\n                                    </span>\r\n                                    <span>\r\n                                        Type: {i.roomType}\r\n                                    </span>\r\n                                    {\r\n                                        !rsrvInfo.firstName &&\r\n                                        <select role=\"none\">\r\n                                            <option value={i.roomStatus}>{i.roomStatus}</option>\r\n                                            {[\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(i => {\r\n                                                return (\r\n                                                    <option value={i} >{i}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    }\r\n\r\n                                    {\r\n                                        i.dailyRate && rsrvInfo.firstName &&\r\n                                        <>\r\n                                            <span>\r\n                                                Daily Rate: {i.dailyRate}\r\n                                            </span>\r\n                                            <span>\r\n                                                Total Charge: {i.totalCharge}\r\n                                            </span>\r\n                                            <button onClick={async () => {\r\n                                                await fireApp.firestore().collection('reservation').add({\r\n                                                    firstName: rsrvInfo.firstName,\r\n                                                    lastName: rsrvInfo.lastName,\r\n                                                    reservedDate: Date.now(),\r\n                                                    checkInDate: rsrvInfo.checkInDate,\r\n                                                    checkOutDate: rsrvInfo.checkOutDate,\r\n                                                    roomType: i.roomType,\r\n                                                    roomStatus: i.roomStatus,\r\n                                                    roomNumber: i.roomNumber,\r\n                                                    dailyRate: i.dailyRate,\r\n                                                    totalCharge: i.totalCharge\r\n                                                });\r\n                                            }}>Reserve</button>\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </main>\r\n            </Header>\r\n        </div >\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let listings = [];\r\n    if (query.type) {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .where(\"roomType\", \"==\", query.type)\r\n            .where(\"roomStatus\", \"==\", \"available\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    else {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .orderBy(\"roomNumber\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    return {\r\n        props: { listings },\r\n    }\r\n}\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}