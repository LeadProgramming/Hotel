{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel\\\\pages\\\\housekeeping.js\",\n    _this = this;\n\nvar Housekeeping = function Housekeeping(_ref) {\n  var dirty = _ref.dirty;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Housekeeping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, _this), dirty.length > 0 ? dirty.map(function (i, j) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Housekeeper: \", i.housekeeper]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Room #: \", i.roomNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Type: \", i.roomType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Status: \", i.roomStatus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Bathroom Towels: \", !i.towels ? \"Cleaned\" : \"Dirty\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Bed Sheets: \", !i.bedSheets ? \"Cleaned\" : \"Dirty\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Vacuum: \", !i.vacuum ? \"Cleaned\" : \"Dirty\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Dusting: \", !i.dusting ? \"Cleaned\" : \"Dirty\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Electronics: \", i.electronics.map(function (j) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: j\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, _this)\n      }, JSON.stringify(i), false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, _this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no rooms.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = Housekeeping;\nexport var __N_SSP = true;\nexport default Housekeeping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Housekeeping\");","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/pages/housekeeping.js"],"names":["Housekeeping","dirty","length","map","i","j","housekeeper","roomNumber","roomType","roomStatus","towels","bedSheets","vacuum","dusting","electronics","JSON","stringify"],"mappings":";;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAEhC,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAJJ,EAOKA,KAAK,CAACC,MAAN,GAAe,CAAf,GACGD,KAAK,CAACE,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChB,0BACI;AAAA,+BACI;AAAA,kCACI;AAAA,wCACkBD,CAAC,CAACE,WADpB;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAII;AAAA,mCACaF,CAAC,CAACG,UADf;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAOI;AAAA,iCACWH,CAAC,CAACI,QADb;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,eAUI;AAAA,mCACaJ,CAAC,CAACK,UADf;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVJ,eAaI;AAAA,4CACsB,CAACL,CAAC,CAACM,MAAH,GAAY,SAAZ,GAAwB,OAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbJ,eAgBI;AAAA,uCACiB,CAACN,CAAC,CAACO,SAAH,GAAe,SAAf,GAA2B,OAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBJ,eAmBI;AAAA,mCACa,CAACP,CAAC,CAACQ,MAAH,GAAY,SAAZ,GAAwB,OADrC;AAAA;AAAA;AAAA;AAAA;AAAA,mBAnBJ,eAsBI;AAAA,oCACc,CAACR,CAAC,CAACS,OAAH,GAAa,SAAb,GAAyB,OADvC;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtBJ,eAyBI;AAAA,wCACkBT,CAAC,CAACU,WAAF,CAAcX,GAAd,CAAkB,UAAAE,CAAC,EAAI;AACrC,kCACI;AAAA,0BACKA;AADL;AAAA;AAAA;AAAA;AAAA,uBADJ;AAKH,aANiB,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUU,IAAI,CAACC,SAAL,CAAeZ,CAAf,CAAV;AAAA;AAAA;AAAA;AAAA,eADJ;AAuCH,KAxCD,CADH,gBAyCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhDb;AAAA,kBADJ;AAqDH,CAvDD;;KAAMJ,Y;;AAwEN,eAAeA,YAAf","sourcesContent":["import fireApp from \"../firebase_config\";\r\n\r\nconst Housekeeping = ({ dirty }) => {\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                Housekeeping\r\n                    </h1>\r\n            <div>\r\n                <div></div>\r\n            </div>\r\n            {dirty.length > 0 ?\r\n                dirty.map((i, j) => {\r\n                    return (\r\n                        <div key={JSON.stringify(i)}>\r\n                            <div>\r\n                                <span>\r\n                                    Housekeeper: {i.housekeeper}\r\n                                </span>\r\n                                <span>\r\n                                    Room #: {i.roomNumber}\r\n                                </span>\r\n                                <span>\r\n                                    Type: {i.roomType}\r\n                                </span>\r\n                                <span>\r\n                                    Status: {i.roomStatus}\r\n                                </span>\r\n                                <span>\r\n                                    Bathroom Towels: {!i.towels ? \"Cleaned\" : \"Dirty\"}\r\n                                </span>\r\n                                <span>\r\n                                    Bed Sheets: {!i.bedSheets ? \"Cleaned\" : \"Dirty\"}\r\n                                </span>\r\n                                <span>\r\n                                    Vacuum: {!i.vacuum ? \"Cleaned\" : \"Dirty\"}\r\n                                </span>\r\n                                <span>\r\n                                    Dusting: {!i.dusting ? \"Cleaned\" : \"Dirty\"}\r\n                                </span>\r\n                                <span>\r\n                                    Electronics: {i.electronics.map(j => {\r\n                                    return (\r\n                                        <div>\r\n                                            {j}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }) : <p>There are no rooms.</p>}\r\n\r\n        </>\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let dirty = [];\r\n    await fireApp.firestore()\r\n        .collection(\"room\")\r\n        .where(\"roomStatus\", \"==\", \"dirty\")\r\n        .get()\r\n        .then(queryData => {\r\n            queryData.forEach(i => {\r\n                dirty.push(i.data());\r\n            })\r\n        })\r\n    return {\r\n        props: { dirty }\r\n    }\r\n\r\n}\r\nexport default Housekeeping;\r\n"]},"metadata":{},"sourceType":"module"}