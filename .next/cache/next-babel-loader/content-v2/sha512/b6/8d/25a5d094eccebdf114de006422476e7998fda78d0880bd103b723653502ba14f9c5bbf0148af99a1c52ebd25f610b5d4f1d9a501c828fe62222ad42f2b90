{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel\\\\pages\\\\rooms.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport fireApp from \"../firebase_config\";\n\nvar Rooms = function Rooms(_ref) {\n  _s();\n\n  var listings = _ref.listings;\n  var router = useRouter();\n  var rsrvInfo = useSelector(function (state) {\n    return state.reservation;\n  });\n  listings.forEach(function (i) {\n    i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate;\n  });\n\n  var reserving = function reserving(_ref2) {\n    var dailyRate = _ref2.dailyRate,\n        totalCharge = _ref2.totalCharge,\n        roomNumber = _ref2.roomNumber,\n        roomType = _ref2.roomType;\n    fireApp.firestore().collection('reservation').add({\n      firstName: rsrvInfo.firstName,\n      lastName: rsrvInfo.lastName,\n      reservedDate: Date.now(),\n      checkInDate: rsrvInfo.checkInDate,\n      checkOutDate: rsrvInfo.checkOutDate,\n      roomType: roomType,\n      roomStatus: \"occupied\",\n      roomNumber: roomNumber,\n      dailyRate: dailyRate,\n      totalCharge: totalCharge\n    });\n    fireApp.firestore().collection('room').docs(roomNumber).update({\n      roomStatus: \"occupied\",\n      checkInDate: rsrvInfo.checkInDate,\n      checkOutDate: rsrvInfo.checkOutDate\n    });\n    router.push(\"/rooms\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"p-8\",\n      children: \"Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-8 py-4\",\n            children: \"Room #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-8 py-4\",\n            children: \"Room Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-8 py-4\",\n            children: \"Room Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-8 py-4\",\n            children: \"Daily Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-8 py-4\",\n            children: \"Total Charge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: (listings === null || listings === void 0 ? void 0 : listings.length) > 0 ? listings.map(function (i, j) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-8 py-4\",\n              children: i.roomNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-8 py-4\",\n              children: i.roomType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-8 py-4\",\n              children: !rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(\"select\", {\n                role: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i.roomStatus,\n                  children: i.roomStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 45\n                }, _this), [\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(function (i) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: i,\n                    children: i\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 53\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, _this), i.dailyRate && rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-8 py-4\",\n                children: i.dailyRate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-8 py-4\",\n                children: i.totalCharge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-8 py-4\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: function onClick() {\n                    reserving(i);\n                  },\n                  children: \"Reserve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, _this)]\n            }, void 0, true)]\n          }, JSON.stringify(i), true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, _this);\n        }) : \"No rooms available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Rooms, \"WVurFAWlKUITANn1Naxaiz/i3Ug=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Rooms;\nexport var __N_SSP = true;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/pages/rooms.js"],"names":["useRouter","useSelector","fireApp","Rooms","listings","router","rsrvInfo","state","reservation","forEach","i","days","dailyRate","reserving","totalCharge","roomNumber","roomType","firestore","collection","add","firstName","lastName","reservedDate","Date","now","checkInDate","checkOutDate","roomStatus","docs","update","push","length","map","j","JSON","stringify"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAMM,QAAQ,GAAGL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAV;AAAA,GAAN,CAA5B;AACAJ,EAAAA,QAAQ,CAACK,OAAT,CAAiB,UAACC,CAAD,EAAO;AAAEA,IAAAA,CAAC,CAAC,aAAD,CAAD,GAAmBJ,QAAQ,CAACK,IAAT,GAAgBD,CAAC,CAACE,SAArC;AAAgD,GAA1E;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,QAAsD;AAAA,QAAnDD,SAAmD,SAAnDA,SAAmD;AAAA,QAAxCE,WAAwC,SAAxCA,WAAwC;AAAA,QAA3BC,UAA2B,SAA3BA,UAA2B;AAAA,QAAfC,QAAe,SAAfA,QAAe;AACpEd,IAAAA,OAAO,CAACe,SAAR,GAAoBC,UAApB,CAA+B,aAA/B,EAA8CC,GAA9C,CAAkD;AAC9CC,MAAAA,SAAS,EAAEd,QAAQ,CAACc,SAD0B;AAE9CC,MAAAA,QAAQ,EAAEf,QAAQ,CAACe,QAF2B;AAG9CC,MAAAA,YAAY,EAAEC,IAAI,CAACC,GAAL,EAHgC;AAI9CC,MAAAA,WAAW,EAAEnB,QAAQ,CAACmB,WAJwB;AAK9CC,MAAAA,YAAY,EAAEpB,QAAQ,CAACoB,YALuB;AAM9CV,MAAAA,QAAQ,EAAEA,QANoC;AAO9CW,MAAAA,UAAU,EAAE,UAPkC;AAQ9CZ,MAAAA,UAAU,EAAEA,UARkC;AAS9CH,MAAAA,SAAS,EAAEA,SATmC;AAU9CE,MAAAA,WAAW,EAAEA;AAViC,KAAlD;AAYAZ,IAAAA,OAAO,CAACe,SAAR,GAAoBC,UAApB,CAA+B,MAA/B,EAAuCU,IAAvC,CAA4Cb,UAA5C,EAAwDc,MAAxD,CAA+D;AAC3DF,MAAAA,UAAU,EAAE,UAD+C;AAE3DF,MAAAA,WAAW,EAAEnB,QAAQ,CAACmB,WAFqC;AAG3DC,MAAAA,YAAY,EAAEpB,QAAQ,CAACoB;AAHoC,KAA/D;AAKArB,IAAAA,MAAM,CAACyB,IAAP,CAAY,QAAZ;AACH,GAnBD;;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAO,MAAA,SAAS,EAAE,YAAlB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAI,YAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAI,YAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAI,YAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI;AAAI,YAAA,SAAS,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAUI;AAAA,kBACK,CAAA1B,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAE2B,MAAV,IAAmB,CAAnB,GAAuB3B,QAAQ,CAAC4B,GAAT,CAAa,UAACtB,CAAD,EAAIuB,CAAJ,EAAU;AAC3C,8BACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAE,WAAf;AAAA,wBACKvB,CAAC,CAACK;AADP;AAAA;AAAA;AAAA;AAAA,qBADJ,eAII;AAAI,cAAA,SAAS,EAAE,WAAf;AAAA,wBACKL,CAAC,CAACM;AADP;AAAA;AAAA;AAAA;AAAA,qBAJJ,eAQI;AAAI,cAAA,SAAS,EAAE,WAAf;AAAA,wBACK,CAACV,QAAQ,CAACc,SAAV,iBACG;AAAQ,gBAAA,IAAI,EAAC,MAAb;AAAA,wCACI;AAAQ,kBAAA,KAAK,EAAEV,CAAC,CAACiB,UAAjB;AAAA,4BAA8BjB,CAAC,CAACiB;AAAhC;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEK,CAAC,WAAD,EAAc,UAAd,EAA0B,OAA1B,EAAmC,aAAnC,EAAkDK,GAAlD,CAAsD,UAAAtB,CAAC,EAAI;AACxD,sCACI;AAAQ,oBAAA,KAAK,EAAEA,CAAf;AAAA,8BAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,2BADJ;AAGH,iBAJA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,qBARJ,EAsBQA,CAAC,CAACE,SAAF,IAAeN,QAAQ,CAACc,SAAxB,iBACA;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAE,WAAf;AAAA,0BACKV,CAAC,CAACE;AADP;AAAA;AAAA;AAAA;AAAA,uBADJ,eAII;AAAI,gBAAA,SAAS,EAAE,WAAf;AAAA,0BACKF,CAAC,CAACI;AADP;AAAA;AAAA;AAAA;AAAA,uBAJJ,eAOI;AAAI,gBAAA,SAAS,EAAE,WAAf;AAAA,uCACI;AAAQ,kBAAA,OAAO,EAAE,mBAAM;AACnBD,oBAAAA,SAAS,CAACH,CAAD,CAAT;AACH,mBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,uBAPJ;AAAA,4BAvBR;AAAA,aAASwB,IAAI,CAACC,SAAL,CAAezB,CAAf,CAAT;AAAA;AAAA;AAAA;AAAA,mBADJ;AA0CH,SA3CuB,CAAvB,GA2CI;AA5CT;AAAA;AAAA;AAAA;AAAA,eAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAkEH,CA5FD;;GAAMP,K;UACaH,S,EACEC,W;;;KAFfE,K;;AA0HN,eAAeA,KAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport fireApp from \"../firebase_config\";\r\nconst Rooms = ({ listings }) => {\r\n    const router = useRouter();\r\n    const rsrvInfo = useSelector(state => state.reservation);\r\n    listings.forEach((i) => { i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate });\r\n\r\n    const reserving = ({ dailyRate, totalCharge, roomNumber, roomType }) => {\r\n        fireApp.firestore().collection('reservation').add({\r\n            firstName: rsrvInfo.firstName,\r\n            lastName: rsrvInfo.lastName,\r\n            reservedDate: Date.now(),\r\n            checkInDate: rsrvInfo.checkInDate,\r\n            checkOutDate: rsrvInfo.checkOutDate,\r\n            roomType: roomType,\r\n            roomStatus: \"occupied\",\r\n            roomNumber: roomNumber,\r\n            dailyRate: dailyRate,\r\n            totalCharge: totalCharge\r\n        });\r\n        fireApp.firestore().collection('room').docs(roomNumber).update({\r\n            roomStatus: \"occupied\",\r\n            checkInDate: rsrvInfo.checkInDate,\r\n            checkOutDate: rsrvInfo.checkOutDate\r\n        });\r\n        router.push(\"/rooms\")\r\n    }\r\n\r\n    return (\r\n        <div className={\"space-y-4\"}>\r\n            <h1 className=\"p-8\">\r\n                Rooms\r\n            </h1>\r\n            <table className={\"table-auto\"}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className={\"px-8 py-4\"}>Room #</th>\r\n                        <th className={\"px-8 py-4\"}>Room Type</th>\r\n                        <th className={\"px-8 py-4\"}>Room Status</th>\r\n                        <th className={\"px-8 py-4\"}>Daily Rate</th>\r\n                        <th className={\"px-8 py-4\"}>Total Charge</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listings?.length > 0 ? listings.map((i, j) => {\r\n                        return (\r\n                            <tr key={JSON.stringify(i)}>\r\n                                <td className={\"px-8 py-4\"}>\r\n                                    {i.roomNumber}\r\n                                </td>\r\n                                <td className={\"px-8 py-4\"}>\r\n                                    {i.roomType}\r\n                                </td>\r\n\r\n                                <td className={\"px-8 py-4\"}>\r\n                                    {!rsrvInfo.firstName &&\r\n                                        <select role=\"none\">\r\n                                            <option value={i.roomStatus}>{i.roomStatus}</option>\r\n                                            {[\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(i => {\r\n                                                return (\r\n                                                    <option value={i} >{i}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>}\r\n                                </td>\r\n\r\n\r\n                                {\r\n                                    i.dailyRate && rsrvInfo.firstName &&\r\n                                    <>\r\n                                        <td className={\"px-8 py-4\"}>\r\n                                            {i.dailyRate}\r\n                                        </td>\r\n                                        <td className={\"px-8 py-4\"}>\r\n                                            {i.totalCharge}\r\n                                        </td>\r\n                                        <td className={\"px-8 py-4\"}>\r\n                                            <button onClick={() => {\r\n                                                reserving(i);\r\n                                            }}>Reserve</button>\r\n                                        </td>\r\n                                    </>\r\n                                }\r\n\r\n\r\n                            </tr>\r\n                        )\r\n                    }) : \"No rooms available\"}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let listings = [];\r\n    if (query.type) {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .where(\"roomType\", \"==\", query.type)\r\n            .where(\"roomStatus\", \"==\", \"available\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    else {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .orderBy(\"roomNumber\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    return {\r\n        props: { listings },\r\n    }\r\n}\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}