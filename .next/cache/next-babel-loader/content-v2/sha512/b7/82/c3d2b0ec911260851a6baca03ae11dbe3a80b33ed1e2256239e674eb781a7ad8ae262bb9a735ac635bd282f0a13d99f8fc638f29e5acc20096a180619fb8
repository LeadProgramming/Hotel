{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport fireApp from \"../firebase_config\";\n\nconst Rooms = ({\n  listings\n}) => {\n  const router = useRouter();\n  const rsrvInfo = useSelector(state => state.reservation);\n  listings.forEach(i => {\n    i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate;\n  });\n\n  const reserving = ({\n    dailyRate,\n    totalCharge,\n    roomNumber,\n    roomType\n  }) => {\n    fireApp.firestore().collection('reservation').add({\n      firstName: rsrvInfo.firstName,\n      lastName: rsrvInfo.lastName,\n      reservedDate: Date.now(),\n      checkInDate: rsrvInfo.checkInDate,\n      checkOutDate: rsrvInfo.checkOutDate,\n      roomType: roomType,\n      roomStatus: \"occupied\",\n      roomNumber: roomNumber,\n      dailyRate: dailyRate,\n      totalCharge: totalCharge\n    });\n    fireApp.firestore().collection('room').doc(roomNumber).update({\n      roomStatus: \"occupied\",\n      checkInDate: rsrvInfo.checkInDate,\n      checkOutDate: rsrvInfo.checkOutDate\n    });\n    router.push(\"/rooms\");\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      className: \"pt-8 pl-8 \",\n      children: \"Rooms\"\n    }), /*#__PURE__*/_jsxs(\"table\", {\n      className: \"table-auto\",\n      children: [/*#__PURE__*/_jsx(\"thead\", {\n        children: /*#__PURE__*/_jsxs(\"tr\", {\n          children: [/*#__PURE__*/_jsx(\"th\", {\n            className: \"px-8 \",\n            children: \"Room #\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            className: \"px-8 \",\n            children: \"Room Type\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            className: \"px-8 \",\n            children: \"Room Status\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            className: \"px-8 \",\n            children: \"Daily Rate\"\n          }), /*#__PURE__*/_jsx(\"th\", {\n            className: \"px-8 \",\n            children: \"Total Charge\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"tbody\", {\n        children: (listings === null || listings === void 0 ? void 0 : listings.length) > 0 ? listings.map((i, j) => {\n          return /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"td\", {\n              className: \"px-8 py-4\",\n              children: i.roomNumber\n            }), /*#__PURE__*/_jsx(\"td\", {\n              className: \"px-8 py-4\",\n              children: i.roomType\n            }), /*#__PURE__*/_jsx(\"td\", {\n              className: \"px-8 py-4\",\n              children: !rsrvInfo.firstName.length ? /*#__PURE__*/_jsx(_Fragment, {\n                children: /*#__PURE__*/_jsxs(\"select\", {\n                  role: \"none\",\n                  children: [/*#__PURE__*/_jsx(\"option\", {\n                    value: i.roomStatus,\n                    children: i.roomStatus\n                  }), [\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(i => {\n                    return /*#__PURE__*/_jsx(\"option\", {\n                      value: i,\n                      children: i\n                    });\n                  })]\n                })\n              }) : i.roomStatus\n            }), i.dailyRate && rsrvInfo.firstName && /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"td\", {\n                className: \"px-8 py-4\",\n                children: i.dailyRate\n              }), /*#__PURE__*/_jsx(\"td\", {\n                className: \"px-8 py-4\",\n                children: i.totalCharge\n              }), /*#__PURE__*/_jsx(\"td\", {\n                className: \"px-8 py-4\",\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  onClick: () => {\n                    reserving(i);\n                  },\n                  children: \"Reserve\"\n                })\n              })]\n            })]\n          }, JSON.stringify(i));\n        }) : \"No rooms available\"\n      })]\n    })]\n  });\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  let listings = [];\n\n  if (query.type) {\n    await fireApp.firestore().collection(\"room\").where(\"roomType\", \"==\", query.type).where(\"roomStatus\", \"==\", \"available\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  } else {\n    await fireApp.firestore().collection(\"room\").orderBy(\"roomNumber\").get().then(queryData => {\n      queryData.forEach(i => {\n        listings.push(i.data());\n      });\n    });\n  }\n\n  return {\n    props: {\n      listings\n    }\n  };\n}\nexport default Rooms;","map":null,"metadata":{},"sourceType":"module"}