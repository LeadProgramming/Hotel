{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel\\\\pages\\\\rooms.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Header from \"../components/header\";\nimport fireApp from \"../firebase_config\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\n\nvar Rooms = function Rooms(_ref) {\n  _s();\n\n  var listings = _ref.listings;\n  var router = useRouter();\n  var rsrvInfo = useSelector(function (state) {\n    return state.reservation;\n  });\n\n  var _useState = useState({}),\n      rsrv = _useState[0],\n      setRsrv = _useState[1];\n\n  listings.forEach(function (i) {\n    i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate;\n  });\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var reserving, _reserving;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _reserving = function _reserving3() {\n              _reserving = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n                var dailyRate, totalCharge, roomNumber, roomStatus, roomType;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        dailyRate = _ref3.dailyRate, totalCharge = _ref3.totalCharge, roomNumber = _ref3.roomNumber, roomStatus = _ref3.roomStatus, roomType = _ref3.roomType;\n                        fireApp.firestore().collection('reservation').add({\n                          firstName: rsrvInfo.firstName,\n                          lastName: rsrvInfo.lastName,\n                          reservedDate: Date.now(),\n                          checkInDate: rsrvInfo.checkInDate,\n                          checkOutDate: rsrvInfo.checkOutDate,\n                          roomType: roomType,\n                          roomStatus: roomStatus,\n                          roomNumber: roomNumber,\n                          dailyRate: dailyRate,\n                          totalCharge: totalCharge\n                        });\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _reserving.apply(this, arguments);\n            };\n\n            reserving = function _reserving2(_x) {\n              return _reserving.apply(this, arguments);\n            };\n\n            if (!Object.keys(rsrv).length) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert(\"works\");\n            _context2.next = 6;\n            return reserving(rsrv);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [rsrv]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this), listings === null || listings === void 0 ? void 0 : listings.map(function (i, j) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Room #: \", i.roomNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Type: \", i.roomType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, _this), !rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(\"select\", {\n                role: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i.roomStatus,\n                  children: i.roomStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 45\n                }, _this), [\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(function (i) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: i,\n                    children: i\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 53\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 41\n              }, _this), i.dailyRate && rsrvInfo.firstName && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Daily Rate: \", i.dailyRate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 45\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Total Charge: \", i.totalCharge]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 45\n                }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: function onClick() {\n                    setRsrv(i);\n                  },\n                  children: \"Reserve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 45\n                }, _this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, _this)\n          }, JSON.stringify(i), false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Rooms, \"HbdSAwloxrjG9k6pIHAEFONKR1Y=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Rooms;\nexport var __N_SSP = true;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/pages/rooms.js"],"names":["Header","fireApp","useSelector","useRouter","useEffect","useState","Rooms","listings","router","rsrvInfo","state","reservation","rsrv","setRsrv","forEach","i","days","dailyRate","reserving","totalCharge","roomNumber","roomStatus","roomType","firestore","collection","add","firstName","lastName","reservedDate","Date","now","checkInDate","checkOutDate","Object","keys","length","alert","map","j","JSON","stringify"],"mappings":"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","sourcesContent":["import Header from \"../components/header\"\r\nimport fireApp from \"../firebase_config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nconst Rooms = ({ listings }) => {\r\n    const router = useRouter();\r\n    const rsrvInfo = useSelector(state => state.reservation);\r\n    const [rsrv, setRsrv] = useState({});\r\n    listings.forEach((i) => { i[\"totalCharge\"] = rsrvInfo.days * i.dailyRate });\r\n    useEffect(async () => {\r\n        async function reserving({ dailyRate, totalCharge, roomNumber, roomStatus, roomType }) {\r\n            fireApp.firestore().collection('reservation').add({\r\n                firstName: rsrvInfo.firstName,\r\n                lastName: rsrvInfo.lastName,\r\n                reservedDate: Date.now(),\r\n                checkInDate: rsrvInfo.checkInDate,\r\n                checkOutDate: rsrvInfo.checkOutDate,\r\n                roomType: roomType,\r\n                roomStatus: roomStatus,\r\n                roomNumber: roomNumber,\r\n                dailyRate: dailyRate,\r\n                totalCharge: totalCharge\r\n            });\r\n        }\r\n        if (Object.keys(rsrv).length) {\r\n            alert(\"works\");\r\n            await reserving(rsrv);\r\n        }\r\n    }, [rsrv]);\r\n    return (\r\n        <div >\r\n            <Header>\r\n                <main>\r\n                    <h1>\r\n                        Rooms\r\n                    </h1>\r\n                    {listings?.map((i, j) => {\r\n                        return (\r\n                            <div key={JSON.stringify(i)}>\r\n                                <div>\r\n                                    <span>\r\n                                        Room #: {i.roomNumber}\r\n                                    </span>\r\n                                    <span>\r\n                                        Type: {i.roomType}\r\n                                    </span>\r\n                                    {\r\n                                        !rsrvInfo.firstName &&\r\n                                        <select role=\"none\">\r\n                                            <option value={i.roomStatus}>{i.roomStatus}</option>\r\n                                            {[\"available\", \"occupied\", \"dirty\", \"maintenance\"].map(i => {\r\n                                                return (\r\n                                                    <option value={i} >{i}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    }\r\n\r\n                                    {\r\n                                        i.dailyRate && rsrvInfo.firstName &&\r\n                                        <>\r\n                                            <span>\r\n                                                Daily Rate: {i.dailyRate}\r\n                                            </span>\r\n                                            <span>\r\n                                                Total Charge: {i.totalCharge}\r\n                                            </span>\r\n                                            <button onClick={() => {\r\n                                                setRsrv(i)\r\n                                            }}>Reserve</button>\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </main>\r\n            </Header>\r\n        </div >\r\n    )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n    let listings = [];\r\n    if (query.type) {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .where(\"roomType\", \"==\", query.type)\r\n            .where(\"roomStatus\", \"==\", \"available\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    else {\r\n        await fireApp.firestore()\r\n            .collection(\"room\")\r\n            .orderBy(\"roomNumber\")\r\n            .get()\r\n            .then(queryData => {\r\n                queryData.forEach(i => {\r\n                    listings.push(i.data());\r\n                })\r\n            })\r\n    }\r\n    return {\r\n        props: { listings },\r\n    }\r\n}\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}