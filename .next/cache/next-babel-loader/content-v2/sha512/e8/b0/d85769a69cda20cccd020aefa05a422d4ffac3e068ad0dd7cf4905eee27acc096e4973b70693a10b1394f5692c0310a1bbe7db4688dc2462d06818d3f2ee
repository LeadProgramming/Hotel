{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\CSUF_SPRING_2021\\\\CPSC_463\\\\projects\\\\hotel\\\\pages\\\\reservation.js\";\nimport { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport fireApp from \"../firebase_config\";\nimport { reserve } from \"../store/reservationSlice\";\n\nconst Reservation = ({\n  reservations\n}) => {\n  const router = useRouter();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm(); // const watchFields = watch([\"checkInDate\", \"checkOutDate\"]);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    const days = Math.floor((Date.parse(data.checkOutDate) - Date.parse(data.checkInDate)) / 8.64e+7);\n    data[\"days\"] = days;\n    dispatch(reserve(data));\n    router.push(`/rooms?type=${data.roomType}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reservation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"firstName\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"lastName\",\n        ref: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"checkInDate\",\n        children: \"Check-in Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"checkInDate\",\n        type: \"date\",\n        ref: register({\n          required: true,\n          valueAsDate: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"checkOutDate\",\n        children: \"Check-Out Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"checkOutDate\",\n        type: \"date\",\n        ref: register({\n          required: true,\n          valueAsDate: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"roomType\",\n        children: \"Room Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"roomType\",\n        ref: register,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"K\",\n          children: \"King\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DQ\",\n          children: \"Double Queen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DQK\",\n          children: \"Double Queen with Kitchen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"S\",\n          children: \"Suite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Proceed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"All Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"First Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Initial Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Check-In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Check-Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Room Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Room Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Room #\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Daily Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Charge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), (reservations === null || reservations === void 0 ? void 0 : reservations.length) > 0 ? reservations.map(i => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: i.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: i.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(i.reservedDate).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(i.checkInDate).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(i.checkOutDate).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: i.roomType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: i.roomStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: i.roomNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: i.dailyRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: i.totalCharge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this);\n      }) : \"No Reservations at this moment\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  let reservations = [];\n  await fireApp.firestore().collection(\"reservation\").orderBy(\"checkInDate\").get().then(queryData => {\n    queryData.forEach(i => {\n      reservations.push(i.data());\n    });\n  });\n  return {\n    props: {\n      reservations\n    }\n  };\n}\nexport default Reservation;","map":{"version":3,"sources":["C:/Users/Diana/Desktop/CSUF_SPRING_2021/CPSC_463/projects/hotel/pages/reservation.js"],"names":["useRouter","useForm","useDispatch","fireApp","reserve","Reservation","reservations","router","register","handleSubmit","watch","errors","dispatch","onSubmit","data","days","Math","floor","Date","parse","checkOutDate","checkInDate","push","roomType","required","valueAsDate","length","map","i","firstName","lastName","reservedDate","toDateString","roomStatus","roomNumber","dailyRate","totalCharge","getServerSideProps","query","firestore","collection","orderBy","get","then","queryData","forEach","props"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport fireApp from \"../firebase_config\";\r\nimport { reserve } from \"../store/reservationSlice\";\r\nconst Reservation = ({ reservations }) => {\r\n  const router = useRouter();\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  // const watchFields = watch([\"checkInDate\", \"checkOutDate\"]);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = data => {\r\n    const days = Math.floor((Date.parse(data.checkOutDate) - Date.parse(data.checkInDate)) / 8.64e+7);\r\n    data[\"days\"] = days;\r\n    dispatch(reserve(data));\r\n    router.push(`/rooms?type=${data.roomType}`);\r\n  };\r\n  return (\r\n    <>\r\n      <h1>\r\n        Reservation\r\n      </h1>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={\"flex-col\"}>\r\n        <label htmlFor=\"firstName\">First Name: </label>\r\n        <input name=\"firstName\" ref={register} />\r\n\r\n        <label htmlFor=\"lastName\">Last Name: </label>\r\n        <input name=\"lastName\" ref={register} />\r\n\r\n        <label htmlFor=\"checkInDate\">Check-in Date: </label>\r\n        <input name=\"checkInDate\" type=\"date\" ref={register({ required: true, valueAsDate: true })} />\r\n\r\n        <label htmlFor=\"checkOutDate\">Check-Out Date: </label>\r\n        <input name=\"checkOutDate\" type=\"date\" ref={register({ required: true, valueAsDate: true })} />\r\n\r\n        <label htmlFor=\"roomType\">Room Type: </label>\r\n        <select name=\"roomType\" ref={register}>\r\n          <option value=\"K\">King</option>\r\n          <option value=\"DQ\">Double Queen</option>\r\n          <option value=\"DQK\">Double Queen with Kitchen</option>\r\n          <option value=\"S\">Suite</option>\r\n        </select>\r\n        <button type=\"submit\">Proceed</button>\r\n      </form>\r\n      <div>All Reservations</div>\r\n      <ul>\r\n        <li>\r\n          <span>First Name </span>\r\n          <span>Last Name</span>\r\n          <span>Initial Date</span>\r\n          <span>Check-In</span>\r\n          <span>Check-Out</span>\r\n          <span>Room Type</span>\r\n          <span>Room Status</span>\r\n          <span>Room #</span>\r\n          <span>Daily Rate</span>\r\n          <span>Total Charge</span>\r\n        </li>\r\n        {\r\n          reservations?.length > 0 ? reservations.map(i => {\r\n            return (\r\n              <li>\r\n                <span>{i.firstName}</span>\r\n                <span>{i.lastName}</span>\r\n                <span>{new Date(i.reservedDate).toDateString()}</span>\r\n                <span>{new Date(i.checkInDate).toDateString()}</span>\r\n                <span>{new Date(i.checkOutDate).toDateString()}</span>\r\n                <span>{i.roomType}</span>\r\n                <span>{i.roomStatus}</span>\r\n                <span>{i.roomNumber}</span>\r\n                <span>{i.dailyRate}</span>\r\n                <span>{i.totalCharge}</span>\r\n              </li>\r\n            )\r\n          }) : \"No Reservations at this moment\"\r\n        }\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\nexport async function getServerSideProps({ query }) {\r\n  let reservations = [];\r\n  await fireApp.firestore()\r\n    .collection(\"reservation\")\r\n    .orderBy(\"checkInDate\")\r\n    .get()\r\n    .then(queryData => {\r\n      queryData.forEach(i => {\r\n        reservations.push(i.data());\r\n      })\r\n    })\r\n  return {\r\n    props: { reservations },\r\n  }\r\n}\r\nexport default Reservation;\r\n"]},"metadata":{},"sourceType":"module"}